// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc100.BALLista.commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc100.BALLista.Robot;
import org.usfirst.frc100.BALLista.RobotMap;

/**
 *
 */
public class AutonomousDriveForward extends Command {
	double distance;
	double speed;
    public AutonomousDriveForward(int distance, double speed) {
    	this.distance = distance;
    	this.speed = speed;
    	  requires(Robot.pickUp);
        requires(Robot.driveTrain);
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    //	new MovePickUpWithPID(.413).start();
    	//Robot.pickUp.enable();
    	RobotMap.driveTrainRightEncoder.reset();
    	RobotMap.driveTrainLeftEncoder.reset();
    	//Robot.driveTrain.pidLeft.enable();
    	//Robot.driveTrain.pidRight.enable();
    //	Robot.driveTrain.drives(speed);
    	Robot.driveTrain.pidLeft.setAbsoluteTolerance(.05);
    	Robot.driveTrain.pidRight.setAbsoluteTolerance(.05);
    //	Robot.driveTrain.pidLeft.setSetpoint(distance);
    	//Robot.driveTrain.pidRight.setSetpoint(distance);
    	
    	
    	
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	if(RobotMap.driveTrainRightEncoder.getDistance() < distance)
    	//Robot.pickUp.setSetpoint(.413);
    	Robot.driveTrain.drives(speed);
    	SmartDashboard.putNumber("distance traveled", RobotMap.driveTrainRightEncoder.getDistance());
    	    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
      if(RobotMap.driveTrainRightEncoder.getDistance() < distance)return false;
      return true;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.driveTrain.pidLeft.disable();
    	Robot.driveTrain.pidRight.disable();
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
